class Node{
	Node nextNode;
	int value;
	
	Node(int argValue, Node argNextNode){
		value = argValue;
		nextNode = argNextNode;
	}
}

// Queue class
class MyQueueListVersion{
	Node head, tail;
	int numOfData;
	
	MyQueueListVersion(){
		tail = new Node(0, null);
		head = new Node(0, tail);
	}
	
	// IsEmpty
	boolean IsEmpty() {
		if(numOfData == 0)
			return true;
		return false;
	}
}


// enqueue
void enqueue(int argValue) {
	Node temp = head;
	while(temp.nextNode != tail)
		temp = temp.nextNode;
	
	Node newNode = new Node(argValue, tail);
	temp.nextNode = newNode;
	numOfData++;
}

// queue 사이즈 반환
int getSize() {
	return numOfData;
}

// dequeue
void dequeue() {
	
}

public class TP30 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
